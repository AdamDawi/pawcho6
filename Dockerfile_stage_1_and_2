# syntax=docker/dockerfile:1.0.0-experimental

# --- STAGE 1 ---
  FROM scratch AS build-stage

  # Dodanie mini-rootfs Alpine do obrazu
  ADD alpine-minirootfs-3.21.3-aarch64.tar /
  
  # Tworzenie katalogu roboczego
  WORKDIR /usr/app
  
  # Instalacja menedżera pakietów, Node.js, npm i git
  RUN apk add --no-cache openssh-client git nodejs npm
  
  # download public key for github.com
  RUN mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts

  # clone our private repository
  RUN --mount=type=ssh \
      git clone git@github.com:adamdawi/pawcho6.git . && \
      npm install
  
  # --- STAGE 2 ---
  FROM nginx:latest
  
  # Instalacja narzędzi
  RUN apt update && apt install -y curl nodejs npm
  
  # Ustawienie katalogu roboczego
  WORKDIR /usr/app
  
  # Kopiowanie plików aplikacji
  COPY --from=build-stage /usr/app /usr/app
  
  # Kopiowanie konfiguracji Nginx
  COPY default.conf /etc/nginx/conf.d/default.conf
  
  # Informacja o portach
  EXPOSE 80 8080
  
  ARG VERSION
  ENV APP_VERSION=${VERSION}
  
  # HEALTHCHECK
  HEALTHCHECK --interval=10s --timeout=1s \
    CMD curl -f http://localhost:80/ || exit 1
  
  # Uruchomienie aplikacji Node.js i Nginx
  CMD ["sh", "-c", "node /usr/app/index.js & nginx -g 'daemon off;'"]
  